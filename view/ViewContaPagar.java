/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controler.ControllerConta;
import controler.ControllerFornecedor;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Date;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelConta;
import model.ModelFornecedor;
import util.BLDatas;
import util.Formatador;

/**
 *
 * @author Cliente
 */
public class ViewContaPagar extends javax.swing.JFrame {

    ControllerFornecedor controllerFornecedor = new ControllerFornecedor();
    ArrayList<ModelFornecedor> listaFornedor = new ArrayList<>();

    ArrayList<ModelConta> listamModelContaPagar = new ArrayList<>();
    ModelConta modelConta = new ModelConta();
    ControllerConta controllerConta = new ControllerConta();
    Formatador formatador = new Formatador();
    BLDatas bl = new BLDatas();
//    ControllerTipoPagamento controllerTipoPagamento = new ControllerTipoPagamento();
//    ArrayList<ModelTipoPagamento> listaModelTipoPagamentos = new ArrayList<>();
    String tipoCadastro;

    /**
     * Creates new form viewContaAReceber
     */
    public ViewContaPagar() throws Exception {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        this.limparDados();
        this.habilitaDesabilitarCampos(false);
        tbl_pagamento.setAutoCreateRowSorter(true);
        tbl_pagamento2.setAutoCreateRowSorter(true);
        jDateChooser1.setDate(bl.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        jDateChooser2.setDate(bl.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_pagamento2 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        pesquisarFild = new javax.swing.JTextField();
        pag_cancelar = new javax.swing.JButton();
        pag_excluir = new javax.swing.JButton();
        pag_alterar = new javax.swing.JButton();
        pag_pagarConta = new javax.swing.JButton();
        pag_novo = new javax.swing.JButton();
        pesquisar1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jlDebito = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jlDebito1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        pesquisarFild2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_pagamento = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        pesquisar2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        pag_data = new com.toedter.calendar.JDateChooser();
        pag_forne = new componentes.UJComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pag_cod = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pag_descricao = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        pag_cheque = new javax.swing.JRadioButton();
        pag_dinheiro = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        pgParcela = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        pag_valo5 = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtfObservacao = new javax.swing.JTextPane();
        jLabel14 = new javax.swing.JLabel();
        pagCheque = new javax.swing.JSpinner();
        pag_valo3 = new javax.swing.JSpinner();
        pag_valo1 = new javax.swing.JSpinner();
        pag_valo2 = new javax.swing.JSpinner();
        pag_valor4 = new javax.swing.JSpinner();
        pag_valor6 = new javax.swing.JSpinner();
        pag_val8 = new javax.swing.JSpinner();
        pag_val9 = new javax.swing.JSpinner();
        pag_val7 = new javax.swing.JSpinner();
        pag_val10 = new javax.swing.JSpinner();
        pag_valo12 = new javax.swing.JSpinner();
        pag_val11 = new javax.swing.JSpinner();
        pag_data1 = new com.toedter.calendar.JDateChooser();
        pag_data2 = new com.toedter.calendar.JDateChooser();
        pag_dat4 = new com.toedter.calendar.JDateChooser();
        pag_dat5 = new com.toedter.calendar.JDateChooser();
        pag_dat3 = new com.toedter.calendar.JDateChooser();
        pag_data6 = new com.toedter.calendar.JDateChooser();
        pag_data8 = new com.toedter.calendar.JDateChooser();
        pag_dat7 = new com.toedter.calendar.JDateChooser();
        pag_dat10 = new com.toedter.calendar.JDateChooser();
        pag_dat11 = new com.toedter.calendar.JDateChooser();
        pag_data12 = new com.toedter.calendar.JDateChooser();
        pag_dat9 = new com.toedter.calendar.JDateChooser();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_pagamento2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Fornecedor", "Data", "Vencimento", "Valor", "Tipo", "N°"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_pagamento2);
        if (tbl_pagamento2.getColumnModel().getColumnCount() > 0) {
            tbl_pagamento2.getColumnModel().getColumn(0).setMinWidth(40);
            tbl_pagamento2.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbl_pagamento2.getColumnModel().getColumn(0).setMaxWidth(40);
            tbl_pagamento2.getColumnModel().getColumn(2).setMinWidth(90);
            tbl_pagamento2.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbl_pagamento2.getColumnModel().getColumn(2).setMaxWidth(90);
            tbl_pagamento2.getColumnModel().getColumn(3).setMinWidth(95);
            tbl_pagamento2.getColumnModel().getColumn(3).setPreferredWidth(95);
            tbl_pagamento2.getColumnModel().getColumn(3).setMaxWidth(95);
            tbl_pagamento2.getColumnModel().getColumn(4).setMinWidth(95);
            tbl_pagamento2.getColumnModel().getColumn(4).setPreferredWidth(95);
            tbl_pagamento2.getColumnModel().getColumn(4).setMaxWidth(95);
            tbl_pagamento2.getColumnModel().getColumn(5).setMinWidth(60);
            tbl_pagamento2.getColumnModel().getColumn(5).setPreferredWidth(60);
            tbl_pagamento2.getColumnModel().getColumn(5).setMaxWidth(60);
            tbl_pagamento2.getColumnModel().getColumn(6).setMinWidth(60);
            tbl_pagamento2.getColumnModel().getColumn(6).setPreferredWidth(60);
            tbl_pagamento2.getColumnModel().getColumn(6).setMaxWidth(60);
            tbl_pagamento2.getColumnModel().getColumn(7).setMinWidth(70);
            tbl_pagamento2.getColumnModel().getColumn(7).setPreferredWidth(70);
            tbl_pagamento2.getColumnModel().getColumn(7).setMaxWidth(70);
        }

        jLabel12.setText("Descrição");

        pag_cancelar.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\cancel.png")); // NOI18N
        pag_cancelar.setText("Cancelar");
        pag_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pag_cancelarActionPerformed(evt);
            }
        });

        pag_excluir.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\delete1.png")); // NOI18N
        pag_excluir.setText("Excluir");
        pag_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pag_excluirActionPerformed(evt);
            }
        });

        pag_alterar.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\Modify.png")); // NOI18N
        pag_alterar.setText("Alterar");
        pag_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pag_alterarActionPerformed(evt);
            }
        });

        pag_pagarConta.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\paid.png")); // NOI18N
        pag_pagarConta.setText("Pagar Conta");
        pag_pagarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pag_pagarContaActionPerformed(evt);
            }
        });

        pag_novo.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\New document.png")); // NOI18N
        pag_novo.setText("Novo");
        pag_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pag_novoActionPerformed(evt);
            }
        });

        pesquisar1.setBackground(new java.awt.Color(102, 255, 204));
        pesquisar1.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\search1.png")); // NOI18N
        pesquisar1.setText("Pesquisar");
        pesquisar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisar1ActionPerformed(evt);
            }
        });

        jLabel15.setText("Pesquisar Data Entre:");

        jButton3.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\search1.png")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\View.png")); // NOI18N
        jButton4.setText("Tudo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total De Conta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jlDebito.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jlDebito.setText(".");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jlDebito)
                .addGap(52, 52, 52))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jlDebito)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total Ainda A Pagar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jlDebito1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jlDebito1.setText(".");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jlDebito1)
                .addGap(52, 52, 52))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jlDebito1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pesquisarFild, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pesquisar1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(pag_cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(pag_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pag_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(pag_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 214, Short.MAX_VALUE)
                        .addComponent(pag_pagarConta))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pesquisarFild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pesquisar1))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pag_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pag_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pag_alterar)
                    .addComponent(pag_novo)
                    .addComponent(pag_pagarConta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Contas a Pagar", jPanel1);

        jLabel11.setText("Descrição");

        tbl_pagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Fornecedor", "Data", "Vencimento", "Valor", "Tipo", "N°"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_pagamento);
        if (tbl_pagamento.getColumnModel().getColumnCount() > 0) {
            tbl_pagamento.getColumnModel().getColumn(0).setMinWidth(40);
            tbl_pagamento.getColumnModel().getColumn(0).setPreferredWidth(40);
            tbl_pagamento.getColumnModel().getColumn(0).setMaxWidth(40);
            tbl_pagamento.getColumnModel().getColumn(2).setMinWidth(90);
            tbl_pagamento.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbl_pagamento.getColumnModel().getColumn(2).setMaxWidth(90);
            tbl_pagamento.getColumnModel().getColumn(3).setMinWidth(95);
            tbl_pagamento.getColumnModel().getColumn(3).setPreferredWidth(95);
            tbl_pagamento.getColumnModel().getColumn(3).setMaxWidth(95);
            tbl_pagamento.getColumnModel().getColumn(4).setMinWidth(95);
            tbl_pagamento.getColumnModel().getColumn(4).setPreferredWidth(95);
            tbl_pagamento.getColumnModel().getColumn(4).setMaxWidth(95);
            tbl_pagamento.getColumnModel().getColumn(5).setMinWidth(60);
            tbl_pagamento.getColumnModel().getColumn(5).setPreferredWidth(60);
            tbl_pagamento.getColumnModel().getColumn(5).setMaxWidth(60);
            tbl_pagamento.getColumnModel().getColumn(6).setMinWidth(60);
            tbl_pagamento.getColumnModel().getColumn(6).setPreferredWidth(60);
            tbl_pagamento.getColumnModel().getColumn(6).setMaxWidth(60);
            tbl_pagamento.getColumnModel().getColumn(7).setMinWidth(70);
            tbl_pagamento.getColumnModel().getColumn(7).setPreferredWidth(70);
            tbl_pagamento.getColumnModel().getColumn(7).setMaxWidth(70);
        }

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\delete1.png")); // NOI18N
        jButton5.setText("Cancelar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\Erase.png")); // NOI18N
        jButton6.setText("Revogar Pagamento");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        pesquisar2.setBackground(new java.awt.Color(102, 255, 204));
        pesquisar2.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\search1.png")); // NOI18N
        pesquisar2.setText("Pesquisar");
        pesquisar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pesquisarFild2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisarFild2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisar2))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Contas Pagas", jPanel2);

        jLabel4.setText("Data:");

        pag_forne.setAutocompletar(true);

        jLabel1.setText("Fornecedor");

        jLabel3.setText("Código");

        pag_cod.setEnabled(false);
        pag_cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pag_codActionPerformed(evt);
            }
        });

        jLabel7.setText("Descrição Da Conta");

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\save.png")); // NOI18N
        jButton1.setText("Salvar");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\vendas\\src\\imagens\\cancel.png")); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Tipo De Pagamento");

        buttonGroup1.add(pag_cheque);
        pag_cheque.setText("Cheque");

        buttonGroup1.add(pag_dinheiro);
        pag_dinheiro.setText("Outros");

        jLabel9.setText("Numero Cheque:");

        jLabel10.setText("Parcelas");

        jLabel13.setText("Valor");

        pag_valo5.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        jScrollPane3.setViewportView(jtfObservacao);

        jLabel14.setText("Observação:");

        pag_valo3.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_valo1.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_valo2.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_valor4.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_valor6.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_val8.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_val9.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_val7.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_val10.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_valo12.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        pag_val11.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(pag_descricao, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(pag_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(jPanel3Layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addGap(236, 236, 236))
                                                .addComponent(pag_forne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pag_valor4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pag_valo3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(pag_valo2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pag_valo1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(pag_data, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(pag_cheque)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pag_dinheiro)))
                                        .addGap(43, 43, 43)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(pgParcela, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel9)
                                            .addComponent(pagCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pag_valo5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_valor6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_val8, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_val9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_valo12, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(pag_val7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_val10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_val11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pag_data1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_data2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_data6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_data8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_data12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(167, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(34, 34, 34))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pag_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_forne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pag_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pag_valo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_data1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pag_valo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pag_data2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(pag_valo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pag_valor4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(pag_dat3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pag_dat4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pag_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pagCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pag_valo5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_dat5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pag_valor6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pag_data6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(pag_val7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(pag_val8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(pag_dat7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pag_data8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pag_val9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pag_dat9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pag_val10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pag_dat10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(6, 6, 6)
                                        .addComponent(pag_val11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(pag_dat11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pag_cheque)
                                    .addComponent(pag_dinheiro))
                                .addGap(67, 67, 67)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pag_valo12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14))
                            .addComponent(pag_data12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pgParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pag_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pag_novoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        this.limparDados();
        habilitaDesabilitarCampos(true);
        jButton1.setEnabled(true);
        // this.jtfCodigoConta.setText("Nova Conta");

        tipoCadastro = "cadastro";

//         this.jtfCodigoConta.setText("Nova Conta");
        //avançar para aba 3
        jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() + 2);


    }//GEN-LAST:event_pag_novoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.limparDados();
        this.habilitaDesabilitarCampos(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        modelConta = new ModelConta();
        try {
            int linha = tbl_pagamento.getSelectedRow();
            int codigo = (int) tbl_pagamento.getValueAt(linha, 0);
            BLDatas bl = new BLDatas();

            modelConta.setCodigo(codigo);
            modelConta.setSituacao(0);
            modelConta.setPagamento(bl.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            //pegunta
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                    + " revogar o pagamento da conta nº:\n" + "\n " + codigo + "?", "Atenção", JOptionPane.YES_NO_OPTION);
            //se sim revoga, se não não faz nada
            if (opcao == JOptionPane.OK_OPTION) {
                if (controllerConta.receberContaReceberController(modelConta)) {
                    JOptionPane.showMessageDialog(this, "Conta revogada!");
                    this.carregarContasPagar();
                    this.carregarContasPagas();
                    jlDebito.setText(".");
                    jlDebito1.setText(".");

                }
            }

            jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() - 1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar uma conta!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        }    }//GEN-LAST:event_jButton6ActionPerformed

    private void pag_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pag_cancelarActionPerformed
        // habilita ou desabilita campos
        this.limparDados();
        this.habilitaDesabilitarCampos(false);    }//GEN-LAST:event_pag_cancelarActionPerformed

    private void pag_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pag_excluirActionPerformed
        this.excluirConta();    }//GEN-LAST:event_pag_excluirActionPerformed

    private void pag_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pag_alterarActionPerformed
        try {
            int linha = tbl_pagamento2.getSelectedRow();
            int codigo = (int) tbl_pagamento2.getValueAt(linha, 0);
            this.limparDados();
            this.habilitaDesabilitarCamposAlterar(true);
            tipoCadastro = "alteracao";
            //seta o código para alteração
            recuperarConta(codigo);

            //avançar para aba 3
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() + 2);
            jButton1.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Você tem que selecionar uma conta para alterar!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        }    }//GEN-LAST:event_pag_alterarActionPerformed


    private void pag_pagarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pag_pagarContaActionPerformed
        modelConta = new ModelConta();
        try {
            int linha = tbl_pagamento2.getSelectedRow();
            int codigo = (int) tbl_pagamento2.getValueAt(linha, 0);
            BLDatas bl = new BLDatas();

            modelConta.setCodigo(codigo);
            modelConta.setSituacao(1);
            modelConta.setPagamento(bl.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            //pegunta
            int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                    + " pagar a conta nº:\n" + "\n " + codigo + "?", "Atenção", JOptionPane.YES_NO_OPTION);
            //se sim paga, se não não faz nada
            if (opcao == JOptionPane.OK_OPTION) {
                if (controllerConta.pagarContaPagarController(modelConta)) {
                    JOptionPane.showMessageDialog(this, "Conta Paga!");
                    this.carregarContasPagar();
                    this.carregarContasPagas();
                    jlDebito.setText(".");
                    jlDebito1.setText(".");

                }
            }

            jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() + 1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar uma conta!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_pag_pagarContaActionPerformed

    private void pesquisar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisar1ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) this.tbl_pagamento2.getModel();
        //pesquisar na tabela.
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.tbl_pagamento2.setRowSorter(classificador);

        //texto digitado
        String texto = pesquisarFild.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));


    }//GEN-LAST:event_pesquisar1ActionPerformed

    private void pesquisar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisar2ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) this.tbl_pagamento.getModel();
        //pesquisar na tabela.
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.tbl_pagamento.setRowSorter(classificador);

        //texto digitado
        String texto = pesquisarFild2.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));    }//GEN-LAST:event_pesquisar2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jButton1.setEnabled(false);
        this.limparDados();
        this.habilitaDesabilitarCampos(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (pag_descricao.getText().equals("") || pag_valo5.getValue().equals("")) {
            JOptionPane.showMessageDialog(this, "Você deve preencher todos os campos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            if (tipoCadastro.equals("cadastro")) {
                try {
                    this.salvar();
                } catch (Exception ex) {
                    Logger.getLogger(ViewContaPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() - 2);
            } else {
                try {
                    this.alterar();
                } catch (Exception ex) {
                    Logger.getLogger(ViewContaPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() - 2);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pag_codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pag_codActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pag_codActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            filtrarPelaData();
            verTotalDeDividas();
            filtrarPelaDataContasPagas();
        } catch (Exception ex) {
            Logger.getLogger(ViewContaPagar.class.getName()).log(Level.SEVERE, null, ex);
        }

     }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        carregarContasPagar();
        carregarContasPagas();
        jlDebito.setText(".");
        jlDebito1.setText(".");
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewContaPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewContaPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewContaPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewContaPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewContaPagar().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ViewContaPagar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JLabel jlDebito;
    private static javax.swing.JLabel jlDebito1;
    private javax.swing.JTextPane jtfObservacao;
    private javax.swing.JSpinner pagCheque;
    private javax.swing.JButton pag_alterar;
    private javax.swing.JButton pag_cancelar;
    private javax.swing.JRadioButton pag_cheque;
    private javax.swing.JTextField pag_cod;
    private com.toedter.calendar.JDateChooser pag_dat10;
    private com.toedter.calendar.JDateChooser pag_dat11;
    private com.toedter.calendar.JDateChooser pag_dat3;
    private com.toedter.calendar.JDateChooser pag_dat4;
    private com.toedter.calendar.JDateChooser pag_dat5;
    private com.toedter.calendar.JDateChooser pag_dat7;
    private com.toedter.calendar.JDateChooser pag_dat9;
    private com.toedter.calendar.JDateChooser pag_data;
    private com.toedter.calendar.JDateChooser pag_data1;
    private com.toedter.calendar.JDateChooser pag_data12;
    private com.toedter.calendar.JDateChooser pag_data2;
    private com.toedter.calendar.JDateChooser pag_data6;
    private com.toedter.calendar.JDateChooser pag_data8;
    private javax.swing.JTextField pag_descricao;
    private javax.swing.JRadioButton pag_dinheiro;
    private javax.swing.JButton pag_excluir;
    private componentes.UJComboBox pag_forne;
    private javax.swing.JButton pag_novo;
    private javax.swing.JButton pag_pagarConta;
    private javax.swing.JSpinner pag_val10;
    private javax.swing.JSpinner pag_val11;
    private javax.swing.JSpinner pag_val7;
    private javax.swing.JSpinner pag_val8;
    private javax.swing.JSpinner pag_val9;
    private javax.swing.JSpinner pag_valo1;
    private javax.swing.JSpinner pag_valo12;
    private javax.swing.JSpinner pag_valo2;
    private javax.swing.JSpinner pag_valo3;
    private javax.swing.JSpinner pag_valo5;
    private javax.swing.JSpinner pag_valor4;
    private javax.swing.JSpinner pag_valor6;
    private javax.swing.JButton pesquisar1;
    private javax.swing.JButton pesquisar2;
    private javax.swing.JTextField pesquisarFild;
    private javax.swing.JTextField pesquisarFild2;
    private javax.swing.JSpinner pgParcela;
    private javax.swing.JTable tbl_pagamento;
    private javax.swing.JTable tbl_pagamento2;
    // End of variables declaration//GEN-END:variables

    private void listarFornecedor() {
        listaFornedor = controllerFornecedor.getListaFornecedorController();
        pag_forne.removeAllItems();
        for (int i = 0; i < listaFornedor.size(); i++) {
            pag_forne.addItem(listaFornedor.get(i).getNomeFornecedor());
        }
    }

    private void limparDados() {

        //carregarContasPagar();
        listarFornecedor();
        carregarContasPagar();
        carregarContasPagas();
        this.pag_descricao.setText("");
        this.pag_data.setDate(null);
        this.pag_data1.setDate(null);
        this.pag_dat10.setDate(null);
        this.pag_dat11.setDate(null);
        this.pag_dat3.setDate(null);
        this.pag_dat4.setDate(null);
        this.pag_dat5.setDate(null);
        this.pag_dat7.setDate(null);
        this.pag_dat9.setDate(null);
        this.pag_data12.setDate(null);
        this.pag_data2.setDate(null);
        this.pag_data6.setDate(null);
        this.pag_data8.setDate(null);
        this.pagCheque.setValue(0);
        this.pgParcela.setValue(0);
        this.jtfObservacao.setText("");
        pag_cheque.setSelected(false);
        pag_dinheiro.setSelected(false);
        this.pag_val10.setValue(0);
        this.pag_val11.setValue(0);
        this.pag_val7.setValue(0);
        this.pag_val8.setValue(0);
        this.pag_val9.setValue(0);
        this.pag_valo1.setValue(0);
        this.pag_valo12.setValue(0);
        this.pag_valo2.setValue(0);
        this.pag_valo5.setValue(0);
        this.pag_valor4.setValue(0);
        this.pag_valor6.setValue(0);
        this.pag_valo3.setValue(0);
    }

    private void habilitaDesabilitarCampos(boolean operaco) {
        this.pag_descricao.setEnabled(operaco);
        this.jtfObservacao.setEnabled(operaco);
        this.pag_data.setEnabled(operaco);
        this.pagCheque.setEnabled(operaco);
        this.pgParcela.setEnabled(operaco);
        this.pag_valo5.setEnabled(operaco);
        this.jtfObservacao.setEnabled(operaco);
        this.pag_forne.setEnabled(operaco);
        this.pag_data.setEnabled(operaco);
        this.pag_data1.setEnabled(operaco);
        this.pag_dat10.setEnabled(operaco);
        this.pag_dat11.setEnabled(operaco);
        this.pag_dat3.setEnabled(operaco);
        this.pag_dat4.setEnabled(operaco);
        this.pag_dat5.setEnabled(operaco);
        this.pag_dat7.setEnabled(operaco);
        this.pag_dat9.setEnabled(operaco);
        this.pag_data12.setEnabled(operaco);
        this.pag_data2.setEnabled(operaco);
        this.pag_data6.setEnabled(operaco);
        this.pag_data8.setEnabled(operaco);
        this.pag_val10.setEnabled(operaco);
        this.pag_val11.setEnabled(operaco);
        this.pag_val7.setEnabled(operaco);
        this.pag_val8.setEnabled(operaco);
        this.pag_val9.setEnabled(operaco);
        this.pag_valo1.setEnabled(operaco);
        this.pag_valo12.setEnabled(operaco);
        this.pag_valo2.setEnabled(operaco);
        this.pag_valo5.setEnabled(operaco);
        this.pag_valor4.setEnabled(operaco);
        this.pag_valor6.setEnabled(operaco);
        this.pag_valo3.setEnabled(operaco);
        this.pag_dinheiro.setEnabled(operaco);
        this.pag_cheque.setEnabled(operaco);

    }

    private void habilitaDesabilitarCamposAlterar(boolean operaco) {
        pag_valo1.setEnabled(operaco);
        pag_data1.setEnabled(operaco);
        pag_descricao.setEnabled(operaco);
        jtfObservacao.setEnabled(operaco);
    }

    private void carregarContasPagar() {
        listamModelContaPagar = controllerConta.getListaContaPagarController(0);
        DefaultTableModel modelo = (DefaultTableModel) tbl_pagamento2.getModel();
        modelo.setNumRows(0);
        String nomeDoFornecedor;
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listamModelContaPagar.size();
        for (int i = 0; i < cont; i++) {
            nomeDoFornecedor = controllerFornecedor.getFornecedorController(listamModelContaPagar.get(i).getCodigoPessoa()).getNomeFornecedor();
            modelo.addRow(new Object[]{
                listamModelContaPagar.get(i).getCodigo(),
                listamModelContaPagar.get(i).getDescricao(),
                nomeDoFornecedor,
                listamModelContaPagar.get(i).getData(),
                listamModelContaPagar.get(i).getVencimento(),
                listamModelContaPagar.get(i).getValor(),
                listamModelContaPagar.get(i).getTipoConta(),
                listamModelContaPagar.get(i).getChequeOutro()

            });
        }
    }

    private void carregarContasPagas() {
        listamModelContaPagar = controllerConta.getListaContaPagarController(1);
        DefaultTableModel modelo = (DefaultTableModel) tbl_pagamento.getModel();
        modelo.setNumRows(0);
        String nomeDoFornecedor;
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listamModelContaPagar.size();
        for (int i = 0; i < cont; i++) {
            nomeDoFornecedor = controllerFornecedor.getFornecedorController(listamModelContaPagar.get(i).getCodigoPessoa()).getNomeFornecedor();
            modelo.addRow(new Object[]{
                listamModelContaPagar.get(i).getCodigo(),
                listamModelContaPagar.get(i).getDescricao(),
                nomeDoFornecedor,
                listamModelContaPagar.get(i).getData(),
                listamModelContaPagar.get(i).getVencimento(),
                listamModelContaPagar.get(i).getValor(),
                listamModelContaPagar.get(i).getTipoConta(),
                listamModelContaPagar.get(i).getChequeOutro()

            });
        }
    }

    private boolean salvar() throws Exception {
        BLDatas bl = new BLDatas();

        int parcelas = (int) pgParcela.getValue();
        int contParcelas = 0;
        if (pag_cheque.isSelected()) {
            modelConta.setTipoConta("CHEQUE");
        }
        if (pag_dinheiro.isSelected()) {
            modelConta.setTipoConta("OUTROS");
        }

        modelConta.setCodigoPessoa(controllerFornecedor.getFornecedorController(this.pag_forne.getSelectedItem().toString()).getIdForncedor());

        modelConta.setDescricao(this.pag_descricao.getText());
        modelConta.setData(bl.converterDataParaDateUS(pag_data.getDate()));
        modelConta.setPagamento(bl.converterDataParaDateUS(pag_data.getDate()));
        modelConta.setSituacao(0);
        modelConta.setObservacao(this.jtfObservacao.getText());
        modelConta.setChequeOutro((int) pagCheque.getValue());

        if (pgParcela.getValue().equals(0)) {
            modelConta.setParcelas(1);
        } else {
            modelConta.setParcelas((int) pgParcela.getValue());
        }
        //salvar 

        for (int i = 0; i < parcelas; i++) {

            if (i == 0) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_data1.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valo1.getValue().toString()));
            }
            if (i == 1) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_data2.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valo2.getValue().toString()));
            }
            if (i == 2) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat3.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valo3.getValue().toString()));
            }
            if (i == 3) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat4.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valor4.getValue().toString()));
            }
            if (i == 4) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat5.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valo5.getValue().toString()));
            }
            if (i == 5) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_data6.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valor6.getValue().toString()));
            }
            if (i == 6) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat7.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_val7.getValue().toString()));
            }
            if (i == 7) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_data8.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_val8.getValue().toString()));
            }
            if (i == 8) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat9.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_val9.getValue().toString()));
            }
            if (i == 9) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat10.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_val10.getValue().toString()));
            }
            if (i == 10) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_dat11.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_val11.getValue().toString()));
            }
            if (i == 11) {
                modelConta.setVencimento(bl.converterDataParaDateUS(pag_data12.getDate()));
                modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valo12.getValue().toString()));
            }

            controllerConta.salvarContaPagarController(modelConta);
            contParcelas++;
        }
        System.out.println(contParcelas);
        if (contParcelas == parcelas) {
            JOptionPane.showMessageDialog(this, "Salvo com sucesso!");
            this.limparDados();
            this.habilitaDesabilitarCampos(false);
            this.carregarContasPagar();
            jlDebito.setText(".");
            jlDebito1.setText(".");
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar!");
            return false;
        }

    }

    private boolean alterar() throws Exception {
        BLDatas bl = new BLDatas();

        if (pag_cheque.isSelected()) {
            modelConta.setTipoConta("CHEQUE");
        }
        if (pag_dinheiro.isSelected()) {
            modelConta.setTipoConta("OUTROS");
        }

        modelConta.setCodigoPessoa(controllerFornecedor.getFornecedorController(this.pag_forne.getSelectedItem().toString()).getIdForncedor());
        modelConta.setCodigo(Integer.valueOf(pag_cod.getText()));
        modelConta.setDescricao(this.pag_descricao.getText());
        modelConta.setData(bl.converterDataParaDateUS(pag_data.getDate()));
        modelConta.setVencimento(bl.converterDataParaDateUS(pag_data1.getDate()));
        modelConta.setPagamento(bl.converterDataParaDateUS(pag_data.getDate()));
        modelConta.setSituacao(0);
        modelConta.setValor((float) formatador.converterVirgulaParaPonto(pag_valo1.getValue().toString()));
        modelConta.setObservacao(this.jtfObservacao.getText());
        modelConta.setChequeOutro((int) pagCheque.getValue());
        //salvar 

        if (controllerConta.atualizarContaPagarController(modelConta)) {
            JOptionPane.showMessageDialog(this, "Atualizado com sucesso");
            this.limparDados();
            this.habilitaDesabilitarCampos(false);
            this.carregarContasPagar();
            jlDebito.setText(".");
            jlDebito1.setText(".");
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private boolean excluirConta() {
        int linha = tbl_pagamento2.getSelectedRow();
        String nome = (String) tbl_pagamento2.getValueAt(linha, 1);
        int codigo = (int) tbl_pagamento2.getValueAt(linha, 0);

        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro:\n" + "\n " + nome + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerConta.excluirContaPagarController(codigo)) {
                JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                carregarContasPagar();
                jlDebito.setText(".");
                jlDebito1.setText(".");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao e os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private boolean recuperarConta(int pCodigoConta) {
        modelConta = new ModelConta();
        modelConta = controllerConta.getContaPagarController(pCodigoConta);
        this.pag_cod.setText(String.valueOf(pCodigoConta));
        this.pag_forne.setSelectedItem(controllerFornecedor.getFornecedorController(modelConta.getCodigoPessoa()).getNomeFornecedor());
        this.pag_descricao.setText(modelConta.getDescricao());
        this.pag_data.setDate(modelConta.getData());
        this.pag_data1.setDate(modelConta.getPagamento());
        this.pag_valo1.setValue(modelConta.getValor());
        this.pgParcela.setValue(modelConta.getParcelas());
        if (modelConta.getTipoConta().equals("CHEQUE")) {
            pag_cheque.setSelected(true);
        }

        if (modelConta.getTipoConta().equals("OUTROS")) {
            pag_dinheiro.setSelected(true);
        }

        this.pagCheque.setValue(modelConta.getChequeOutro());

        return true;
    }
// verficar 

    private void filtrarPelaData() throws Exception {
        listamModelContaPagar = controllerConta.getListaContaPagarController(0);
        BLDatas bl = new BLDatas();
        DefaultTableModel modelo = (DefaultTableModel) tbl_pagamento2.getModel();
        modelo.setNumRows(0);
        String nomeDoFornecedor;
        double aindaAPagar = 0;

        Date start = null, end = null;

        //CARREGA OS DADOS DA LISTA NA TABELA
        start = bl.converterDataParaDateUS(jDateChooser1.getDate());
        end = bl.converterDataParaDateUS(jDateChooser2.getDate());

        int cont = listamModelContaPagar.size();
        for (int i = 0; i < cont; i++) {
            // pesquisar valores entre datas.
            if (start.compareTo(listamModelContaPagar.get(i).getVencimento()) <= 0
                    && end.compareTo(listamModelContaPagar.get(i).getVencimento()) >= 0) {
                nomeDoFornecedor = controllerFornecedor.getFornecedorController(listamModelContaPagar.get(i).getCodigoPessoa()).getNomeFornecedor();
                modelo.addRow(new Object[]{
                    listamModelContaPagar.get(i).getCodigo(),
                    listamModelContaPagar.get(i).getDescricao(),
                    nomeDoFornecedor,
                    listamModelContaPagar.get(i).getData(),
                    listamModelContaPagar.get(i).getVencimento(),
                    listamModelContaPagar.get(i).getValor(),
                    listamModelContaPagar.get(i).getTipoConta(),
                    listamModelContaPagar.get(i).getChequeOutro()

                });

                // Ver o que tem que pagar no mês selecionado
                aindaAPagar += listamModelContaPagar.get(i).getValor();
            }
        }

        BigDecimal aproximacaoAindaAPagar = new BigDecimal(aindaAPagar).setScale(2, RoundingMode.HALF_EVEN);
        jlDebito1.setText(String.valueOf(aproximacaoAindaAPagar));
        aindaAPagar = 0;

    }

    private void verTotalDeDividas() throws Exception {
        listamModelContaPagar = controllerConta.getListaContaPagarController();
        BLDatas bl = new BLDatas();
        double totalDeDivida = 0;

        Date start = null, end = null;

        try {
            start = bl.converterDataParaDateUS(jDateChooser1.getDate());
            end = bl.converterDataParaDateUS(jDateChooser2.getDate());
        } catch (Exception e) {

        }
        //CARREGA OS DADOS DA LISTA NA TABELA

        int cont = listamModelContaPagar.size();
        for (int i = 0; i < cont; i++) {
            // pesquisar valores entre datas.
            if (start.compareTo(listamModelContaPagar.get(i).getVencimento()) <= 0
                    && end.compareTo(listamModelContaPagar.get(i).getVencimento()) >= 0) {
                // Ver o que tem que pagar no mês selecionado
                totalDeDivida += listamModelContaPagar.get(i).getValor();
            }
        }
        BigDecimal aproximacaoTotalDeDivida = new BigDecimal(totalDeDivida).setScale(2, RoundingMode.HALF_EVEN);
        jlDebito.setText(String.valueOf(aproximacaoTotalDeDivida));
        totalDeDivida = 0;
    }

    private void filtrarPelaDataContasPagas() throws Exception {
        listamModelContaPagar = controllerConta.getListaContaPagarController(1);
        BLDatas bl = new BLDatas();
        DefaultTableModel modelo = (DefaultTableModel) tbl_pagamento.getModel();
        modelo.setNumRows(0);
        String nomeDoFornecedor;

        Date start = null, end = null;

        try {
            start = bl.converterDataParaDateUS(jDateChooser1.getDate());
            end = bl.converterDataParaDateUS(jDateChooser2.getDate());
        } catch (Exception e) {

        }
        //CARREGA OS DADOS DA LISTA NA TABELA

        int cont = listamModelContaPagar.size();
        for (int i = 0; i < cont; i++) {
            // pesquisar valores entre datas.
            if (start.compareTo(listamModelContaPagar.get(i).getVencimento()) <= 0
                    && end.compareTo(listamModelContaPagar.get(i).getVencimento()) >= 0) {
                nomeDoFornecedor = controllerFornecedor.getFornecedorController(listamModelContaPagar.get(i).getCodigoPessoa()).getNomeFornecedor();
                modelo.addRow(new Object[]{
                    listamModelContaPagar.get(i).getCodigo(),
                    listamModelContaPagar.get(i).getDescricao(),
                    nomeDoFornecedor,
                    listamModelContaPagar.get(i).getData(),
                    listamModelContaPagar.get(i).getVencimento(),
                    listamModelContaPagar.get(i).getValor(),
                    listamModelContaPagar.get(i).getTipoConta(),
                    listamModelContaPagar.get(i).getChequeOutro()

                });

            }
        }

    }

}
